{
  "swagger": "2.0",
  "info": {
    "title": "field.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/fields/{field}": {
      "get": {
        "operationId": "FieldService_GetField",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/FieldResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "field",
            "description": "field ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "FieldService"
        ]
      }
    },
    "/subscribe": {
      "get": {
        "summary": "Websocket endpoint",
        "operationId": "FieldService_Subscribe",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/SubscribeResponse"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of SubscribeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "FieldService"
        ]
      }
    }
  },
  "definitions": {
    "FieldObject": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "systemName": {
          "type": "string"
        }
      },
      "title": "Response"
    },
    "FieldResponse": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldObject"
          }
        }
      },
      "title": "The resource content - fields array"
    },
    "SubscribeResponse": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        },
        "data": {
          "type": "object"
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubscribeResponseEvent"
          }
        }
      }
    },
    "SubscribeResponseEvent": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "events": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "deleteFieldResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
