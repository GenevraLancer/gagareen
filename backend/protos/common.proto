syntax = "proto3";

import "protoc-gen-openapiv2/options/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/struct.proto";

// Defines the import path that should be used to import the generated package and the package name.
option go_package = "backend/gen/api;myapi";

// These annotations are used when generating the OpenAPI file.
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
      version: "1.0";
    };
    schemes: HTTPS;
  };
    
  service CommonService{
//Command endpoint
    rpc AddField (AddFieldParams) returns (FieldObject)
    {
        // Client example - post field by SystemName:
        option (google.api.http) = { 
            post: "/api/v1/addField"
            body: "*"
        };
    }
  
//Query endpoint
    rpc BulkGetFields (BulkFields) returns (stream FieldObject)
    {
        // Client example - returns the list all fields:
        // curl http://gagarin/fields/
        option (google.api.http) = { 
            get: "/api/v1/fields" 
        };
    }

   //Query endpoint
    rpc GetField (GetFieldParams) returns (FieldObject)
{
    // Client example - returns the first field:
    // curl http://gagarin/fields/1
    option (google.api.http) = { 
        get: "/api/v1/fields/{id}" 
    };
}

//Пример Websocket
/*    
    rpc Subscribe (SubscribeRequest) returns (stream SubscribeResponse) {
        option (google.api.http) = {
            get: "/subscribe"
        };
    }
*/
}

//Request mapped to URL path by option (google.api.http)
message BulkFields{}

message GetFieldParams{
    //field ID
    string id = 1;
}

message AddFieldParams{
    string systemName = 1 [json_name = "fieldSystemName"];
//    string engFullName = 3;
//    string engShortName = 4;
//    string label = 5;
//    string comment = 6;
//    string uiElem = 7;
}

//Response
message  FieldObject{
    string id = 1;
    string systemName = 2;
}


//TODO реализовать удаление
/*
message DeleteFieldParams{
    string id = 1;
}

message deleteFieldResponse{
    string message = 1;
}
*/

//Пример Websocket resource content
/*
message SubscribeRequest {
    string query = 1;
}
message SubscribeResponse {
    string query = 1;
    google.protobuf.Struct data = 2;
    message Event {
        string key = 1;
        repeated string events = 2;
    }
    repeated Event events = 3;
*/